{"version":3,"file":"ngx-audio-player.js","sources":["ng://ngx-audio-player/lib/service/audio-player-service/audio-player.service.ts","ng://ngx-audio-player/lib/component/base/base-audio-player.component.ts","ng://ngx-audio-player/lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component.ts","ng://ngx-audio-player/lib/component/mat-basic-audio-player/mat-basic-audio-player.component.ts","ng://ngx-audio-player/lib/pipe/seconds-to-minutes.ts","ng://ngx-audio-player/lib/ngx-audio-player.module.ts","ng://ngx-audio-player/lib/model/track.model.ts","ng://ngx-audio-player/public_api.ts","ng://ngx-audio-player/ngx-audio-player.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioPlayerService {\n\n  // Dynamic update of playlist\n  tracks: Track[] = [];\n  playlistSubject$: BehaviorSubject<Track[]> =\n    new BehaviorSubject<Track[]>(this.tracks);\n\n  // Get the current track\n  currentTrack: Track;\n  currentTrackSubject$: BehaviorSubject<Track> =\n    new BehaviorSubject<Track>(this.currentTrack);\n\n  // Get the current time\n  currentTime: any;\n  currentTimeSubject$: BehaviorSubject<any> =\n    new BehaviorSubject<any>(this.currentTime);\n\n  setPlaylist(tracks: Track[]) {\n    this.tracks = tracks;\n    this.playlistSubject$.next(this.tracks);\n  }\n\n  getPlaylist(): Observable<Track[]> {\n    return this.playlistSubject$.asObservable();\n  }\n\n  setCurrentTrack(currentTrack: Track) {\n    this.currentTrack = currentTrack;\n    this.currentTrackSubject$.next(this.currentTrack);\n  }\n\n  getCurrentTrack(): Observable<Track> {\n    return this.currentTrackSubject$.asObservable();\n  }\n\n  setCurrentTime(currentTime: any) {\n    this.currentTime = currentTime;\n    this.currentTimeSubject$.next(this.currentTime);\n  }\n\n  getCurrentTime(): Observable<any> {\n    return this.currentTimeSubject$.asObservable();\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MatSlider } from '@angular/material/slider';\nimport { Subject } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\nexport class BaseAudioPlayerFunctions {\n  @Output()\n  trackEnded: Subject<string> = new Subject<string>();\n\n  @ViewChild('audioPlayer', { static: true }) player: ElementRef;\n  timeLineDuration: MatSlider;\n\n  iOS =\n    (/iPad|iPhone|iPod/.test(navigator.platform) ||\n      (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\n    !window.MSStream;\n\n  loaderDisplay = false;\n  isPlaying = false;\n  currentTime = 0;\n  volume = 0.1;\n  duration = 0.01;\n\n  private startOffsetValue = 0;\n  @Input()\n  set startOffset(seconds: number) {\n    this.startOffsetValue = seconds;\n    this.player.nativeElement.currentTime = seconds;\n  }\n  get startOffset(): number {\n    return this.startOffsetValue;\n  }\n\n  @Input()\n  public endOffset = 0;\n  constructor(protected cd: ChangeDetectorRef) {}\n  currTimePosChanged(event) {\n    this.player.nativeElement.currentTime = event.value;\n    this.cd.markForCheck();\n  }\n\n  bindPlayerEvent(): void {\n    this.player.nativeElement.addEventListener('playing', () => {\n      this.isPlaying = true;\n      this.duration = Math.floor(this.player.nativeElement.duration);\n      this.cd.markForCheck();\n    });\n    this.player.nativeElement.addEventListener('pause', () => {\n      this.isPlaying = false;\n      this.cd.markForCheck();\n    });\n    this.player.nativeElement.addEventListener('timeupdate', () => {\n      this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n      if (this.currentTime >= this.duration - this.endOffset) {\n        this.player.nativeElement.pause();\n      }\n      this.cd.markForCheck();\n    });\n    this.player.nativeElement.addEventListener('volume', () => {\n      this.volume = Math.floor(this.player.nativeElement.volume);\n      this.cd.markForCheck();\n    });\n    if (!this.iOS) {\n      this.player.nativeElement.addEventListener('loadstart', () => {\n        this.loaderDisplay = true;\n      });\n      this.cd.markForCheck();\n    }\n    this.player.nativeElement.addEventListener('loadeddata', () => {\n      this.loaderDisplay = false;\n      this.duration = Math.floor(this.player.nativeElement.duration);\n      this.cd.markForCheck();\n    });\n    this.player.nativeElement.addEventListener('ended', () => {\n      this.trackEnded.next('ended');\n      this.cd.markForCheck();\n    });\n  }\n\n  playBtnHandler(): void {\n    if (this.loaderDisplay) {\n      return;\n    }\n    if (this.player.nativeElement.paused) {\n      if (this.currentTime >= this.duration - this.endOffset) {\n        this.player.nativeElement.currentTime = this.startOffset;\n      } else {\n        this.player.nativeElement.currentTime = this.currentTime;\n      }\n\n      this.player.nativeElement.play();\n    } else {\n      this.currentTime = this.player.nativeElement.currentTime;\n      this.player.nativeElement.pause();\n    }\n    this.cd.markForCheck();\n  }\n\n  play(track?: Track): void {\n    if (track) {\n      this.startOffset = track.startOffset || 0;\n      this.endOffset = track.endOffset || 0;\n    }\n    this.cd.markForCheck();\n\n    setTimeout(() => {\n      this.player.nativeElement.play();\n      this.cd.markForCheck();\n    }, 50);\n  }\n\n  toggleVolume() {\n    if (this.volume === 0) {\n      this.setVolume(1.0);\n    } else {\n      this.setVolume(0);\n    }\n    this.cd.markForCheck();\n  }\n\n  protected setVolume(vol) {\n    this.volume = vol;\n    this.player.nativeElement.volume = this.volume;\n    this.cd.markForCheck();\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Track } from '../../model/track.model';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player.component';\n\n@Component({\n  selector: 'mat-advanced-audio-player',\n  templateUrl: './mat-advanced-audio-player.component.html',\n  styleUrls: [\n    './mat-advanced-audio-player.component.css',\n    './../base/base-audio-player.component.css',\n  ],\n})\nexport class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions\n  implements OnInit {\n  audioPlayerService: AudioPlayerService;\n  constructor(protected cd: ChangeDetectorRef) {\n    super(cd);\n    this.audioPlayerService = new AudioPlayerService();\n  }\n\n  @Input()\n  set playlist(playlist: Track[]) {\n    this.audioPlayerService.setPlaylist(playlist);\n  }\n\n  @ViewChild(MatPaginator, { static: false }) set matPaginator(\n    mp: MatPaginator\n  ) {\n    this.paginator = mp;\n    this.setDataSourceAttributes();\n  }\n\n  displayedColumns: string[] = ['title', 'status'];\n  dataSource = new MatTableDataSource<Track>();\n  paginator: MatPaginator;\n\n  timeLineDuration: MatSlider;\n\n  tracks: Track[] = [];\n\n  @Input() displayTitle = true;\n  @Input() displayPlaylist = true;\n  @Input() displayVolumeControls = true;\n  @Input() pageSizeOptions = [10, 20, 30];\n  @Input() expanded = true;\n  @Input() autoPlay = false;\n\n  private currentIndex = 0;\n\n  currentTrack: Track;\n  private previousTrack: Track;\n  private nextTrack: Track;\n\n  ngOnInit() {\n    this.bindPlayerEvent();\n\n    // Subscribe to playlist observer from AudioPlayerService and\n    // update the playlist within MatAdvancedAudioPlayerComponent\n    this.audioPlayerService.getPlaylist().subscribe((tracks) => {\n      if (tracks !== null && tracks !== []) {\n        this.tracks = tracks;\n        this.initialize();\n      }\n    });\n  }\n\n  initialize() {\n    // populate indexs for the track and configure\n    // material table data source and paginator\n    this.setDataSourceAttributes();\n\n    // auto play next track\n    this.player.nativeElement.addEventListener('ended', () => {\n      this.nextSong();\n    });\n\n    this.player.nativeElement.addEventListener('timeupdate', () => {\n      this.audioPlayerService.setCurrentTime(\n        this.player.nativeElement.currentTime\n      );\n    });\n\n    this.player.nativeElement.currentTime = this.startOffset;\n    this.updateCurrentSong();\n    if (this.autoPlay) {\n      super.play();\n    }\n  }\n\n  setDataSourceAttributes() {\n    let index = 1;\n    if (this.tracks) {\n      this.tracks.forEach((track: Track) => {\n        track.index = index++;\n      });\n      this.dataSource = new MatTableDataSource<Track>(this.tracks);\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  nextSong(): void {\n    if (\n      this.displayPlaylist === true &&\n      ((this.currentIndex + 1) % this.paginator.pageSize === 0 ||\n        this.currentIndex + 1 === this.paginator.length)\n    ) {\n      if (this.paginator.hasNextPage()) {\n        this.paginator.nextPage();\n      } else if (!this.paginator.hasNextPage()) {\n        this.paginator.firstPage();\n      }\n    }\n    this.currentTime = 0;\n    this.duration = 0.01;\n    if (this.currentIndex + 1 >= this.tracks.length) {\n      this.currentIndex = 0;\n    } else {\n      this.currentIndex++;\n    }\n    this.updateCurrentSong();\n    this.play(this.nextTrack);\n  }\n\n  previousSong(): void {\n    this.currentTime = 0;\n    this.duration = 0.01;\n    if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n      if (\n        this.displayPlaylist === true &&\n        (this.currentIndex % this.paginator.pageSize === 0 ||\n          this.currentIndex === 0)\n      ) {\n        if (this.paginator.hasPreviousPage()) {\n          this.paginator.previousPage();\n        } else if (!this.paginator.hasPreviousPage()) {\n          this.paginator.lastPage();\n        }\n      }\n      if (this.currentIndex - 1 < 0) {\n        this.currentIndex = this.tracks.length - 1;\n      } else {\n        this.currentIndex--;\n      }\n    } else {\n      this.resetSong();\n    }\n    this.updateCurrentSong();\n    this.play(this.previousTrack);\n  }\n\n  resetSong(): void {\n    this.player.nativeElement.src = this.currentTrack.link;\n  }\n\n  selectTrack(index: number): void {\n    this.currentIndex = index - 1;\n    this.updateCurrentSong();\n    this.play(this.currentTrack);\n  }\n\n  checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n    return this.player.nativeElement.currentTime > 2;\n  }\n\n  updateCurrentSong(): void {\n    this.currentTrack = this.tracks[this.currentIndex];\n    this.previousTrack =\n      this.currentIndex - 1 >= 0\n        ? this.tracks[this.currentIndex - 1]\n        : this.tracks[this.tracks.length - 1];\n    this.nextTrack =\n      this.currentIndex + 1 >= this.tracks.length\n        ? this.tracks[0]\n        : this.tracks[this.currentIndex + 1];\n\n    this.audioPlayerService.setCurrentTrack(this.currentTrack);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player.component';\n\n@Component({\n  selector: 'mat-basic-audio-player',\n  templateUrl: './mat-basic-audio-player.component.html',\n  styleUrls: [\n    './mat-basic-audio-player.component.css',\n    './../base/base-audio-player.component.css',\n  ],\n})\nexport class MatBasicAudioPlayerComponent extends BaseAudioPlayerFunctions\n  implements OnInit {\n  @Output()\n  closePlayer = new EventEmitter();\n\n  @Output()\n  nextSong = new EventEmitter();\n  @Output()\n  previousSong = new EventEmitter();\n\n  @Input()\n  closeBtn: boolean;\n\n  @Input()\n  title: string;\n\n  @Input()\n  audioUrl: string;\n\n  @Input()\n  displayTitle = false;\n\n  @Input()\n  autoPlay = false;\n\n  @Input()\n  disabledSeek = false;\n\n  @Input()\n  displayVolumeControls = true;\n\n  audioPlayerService: AudioPlayerService;\n  isFinite = isFinite;\n  constructor(protected cd: ChangeDetectorRef) {\n    super(cd);\n    this.audioPlayerService = new AudioPlayerService();\n  }\n\n  ngOnInit() {\n    this.bindPlayerEvent();\n\n    this.player.nativeElement.addEventListener('timeupdate', () => {\n      this.audioPlayerService.setCurrentTime(\n        this.player.nativeElement.currentTime\n      );\n    });\n\n    if (this.autoPlay) {\n      super.play();\n    }\n\n    this.volume = Math.floor(this.player.nativeElement.volume);\n    this.cd.markForCheck();\n  }\n\n  resetSong(): void {\n    this.player.nativeElement.src = this.audioUrl;\n  }\n\n  startClosePlayer() {\n    this.currentTime = this.player.nativeElement.currentTime;\n    this.player.nativeElement.pause();\n    this.closePlayer.next();\n    this.cd.markForCheck();\n  }\n\n  volumeChanged(e) {\n    this.setVolume(e.value);\n    this.cd.markForCheck();\n  }\n\n  startNextSong() {\n    this.currentTime = this.player.nativeElement.currentTime;\n    this.player.nativeElement.pause();\n    this.nextSong.next();\n    this.cd.markForCheck();\n  }\n\n  startPreviousSong() {\n    this.currentTime = this.player.nativeElement.currentTime;\n    this.player.nativeElement.pause();\n    this.previousSong.next();\n    this.cd.markForCheck();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({ name: 'secondsToMinutes' })\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        const minutes = ('0' + Math.floor(time / 60)).slice(-2);\n        const seconds = ('0' + time % 60).slice(-2);\n        return `${minutes}:${seconds}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatBasicAudioPlayerComponent } from './component/mat-basic-audio-player/mat-basic-audio-player.component';\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\nimport { MatAdvancedAudioPlayerComponent } from './component/mat-advanced-audio-player/mat-advanced-audio-player.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [MatBasicAudioPlayerComponent, SecondsToMinutesPipe, MatAdvancedAudioPlayerComponent],\n  imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,\n    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],\n  exports: [MatBasicAudioPlayerComponent, MatAdvancedAudioPlayerComponent]\n})\nexport class NgxAudioPlayerModule {\n}\n","export class Track {\n  index?: number;\n  link: string;\n  title: string;\n  startOffset?: number;\n  endOffset?: number;\n  public toString = (): string => {\n    return `Track (index: ${this.index}, title: ${this.title})`;\n  }\n}\n","/*\n * Public API Surface of ngx-audio-player\n */\n\nexport * from './lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component';\nexport * from './lib/component/mat-basic-audio-player/mat-basic-audio-player.component';\nexport * from './lib/ngx-audio-player.module';\nexport * from './lib/model/track.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BaseAudioPlayerFunctions as ɵa} from './lib/component/base/base-audio-player.component';\nexport {SecondsToMinutesPipe as ɵb} from './lib/pipe/seconds-to-minutes';"],"names":[],"mappings":"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"}